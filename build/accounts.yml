services:
  accounts:
    container_name: accounts
    image: indigowar/food_out_accounts:latest
    restart: unless-stopped
    depends_on:
      - accounts_database
    networks:
      - accounts-network
      - proxy-network
      - kafka-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.accounts.rule=Host(`accounts.localhost`)"
      - "traefik.http.services.accounts.loadbalancer.server.port=80"
    environment:
      POSTGRES_USER: ${ACCOUNTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACCOUNTS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ACCOUNTS_POSTGRES_DB}
      POSTGRES_HOST: accounts_db
      POSTGRES_PORT: 5432

      SECURITY_KEY: ${AUTH_SECURITY_KEY}

      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_ACCOUNT_CREATED_TOPIC: ${KAFKA_ACCOUNT_CREATED_TOPIC}
      KAFKA_ACCOUNT_DELETED_TOPIC: ${KAFKA_ACCOUNT_DELETED_TOPIC}

  accounts_database:
    container_name: accounts_db
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - accounts-network
    volumes:
      - accounts_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${ACCOUNTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACCOUNTS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ACCOUNTS_POSTGRES_DB}

networks:
  accounts-network:

volumes:
  accounts_db:
