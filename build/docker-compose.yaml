version: '3'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.11
    restart: unless-stopped
    privileged: true
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=proxy-network"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
    networks:
      - traefik-proxy-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  accounts:
    container_name: accounts_service
    build:
      context: ../services/accounts
      dockerfile: ./build/Dockerfile
    restart: unless-stopped
    depends_on:
      - accounts_database
    networks:
      - traefik-proxy-network
      - accounts-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.accounts.rule=Host(`accounts.localhost`)"
      - "traefik.http.services.accounts.loadbalancer.server.port=80"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: strong_and_complicated_password
      POSTGRES_DB: accounts
      POSTGRES_HOST: accounts_db
      POSTGRES_PORT: 5432
      SECURITY_KEY: "security key"

  accounts_database:
    container_name: accounts_db
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - accounts-network
    volumes:
      - ../.volumes/accounts_db:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: strong_and_complicated_password
      POSTGRES_DB: accounts

  auth_service:
    container_name: auth_service
    build:
      context: ../services/auth
      dockerfile: ./build/Dockerfile
    restart: unless-stopped
    depends_on:
      - auth_storage
    networks:
      - traefik-proxy-network
      - auth-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.services.auth.loadbalancer.server.port=80"
    environment:
      REDIS_HOST: auth_storage
      REDIS_PORT: 6379
      REDIS_PASSWORD: strong_and_complicated_password
      REDIS_DB: 0

      AUTH_SESSION_DURATION: 24h
      AUTH_ACCESS_TOKEN_DURATION: 15m
      ACCOUNTS_URL: accounts.localhost

  auth_storage:
    container_name: auth_storage
    image: redis:7.2-alpine
    restart: unless-stopped
    networks:
      - auth-network
    volumes:
      - ../.volumes/auth_storage:/data
    environment:
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: strong_and_complicated_password

networks:
  traefik-proxy-network:
    name: proxy-network
  accounts-network:
    name: accounts-network
  auth-network:
    name: auth-network
