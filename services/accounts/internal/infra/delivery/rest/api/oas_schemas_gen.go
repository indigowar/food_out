// Code generated by ogen, DO NOT EDIT.

package api

// Ref: #/components/schemas/AccountCreationInfo
type AccountCreationInfo struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

// GetPhone returns the value of Phone.
func (s *AccountCreationInfo) GetPhone() string {
	return s.Phone
}

// GetPassword returns the value of Password.
func (s *AccountCreationInfo) GetPassword() string {
	return s.Password
}

// SetPhone sets the value of Phone.
func (s *AccountCreationInfo) SetPhone(val string) {
	s.Phone = val
}

// SetPassword sets the value of Password.
func (s *AccountCreationInfo) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/AccountCredentials
type AccountCredentials struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

// GetPhone returns the value of Phone.
func (s *AccountCredentials) GetPhone() string {
	return s.Phone
}

// GetPassword returns the value of Password.
func (s *AccountCredentials) GetPassword() string {
	return s.Password
}

// SetPhone sets the value of Phone.
func (s *AccountCredentials) SetPhone(val string) {
	s.Phone = val
}

// SetPassword sets the value of Password.
func (s *AccountCredentials) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/AccountId
type AccountId struct {
	ID string `json:"id"`
}

// GetID returns the value of ID.
func (s *AccountId) GetID() string {
	return s.ID
}

// SetID sets the value of ID.
func (s *AccountId) SetID(val string) {
	s.ID = val
}

func (*AccountId) createAccountRes()       {}
func (*AccountId) validateCredentialsRes() {}

// Ref: #/components/schemas/AccountInfo
type AccountInfo struct {
	ID      string    `json:"id"`
	Phone   string    `json:"phone"`
	Name    OptString `json:"name"`
	Profile OptString `json:"profile"`
}

// GetID returns the value of ID.
func (s *AccountInfo) GetID() string {
	return s.ID
}

// GetPhone returns the value of Phone.
func (s *AccountInfo) GetPhone() string {
	return s.Phone
}

// GetName returns the value of Name.
func (s *AccountInfo) GetName() OptString {
	return s.Name
}

// GetProfile returns the value of Profile.
func (s *AccountInfo) GetProfile() OptString {
	return s.Profile
}

// SetID sets the value of ID.
func (s *AccountInfo) SetID(val string) {
	s.ID = val
}

// SetPhone sets the value of Phone.
func (s *AccountInfo) SetPhone(val string) {
	s.Phone = val
}

// SetName sets the value of Name.
func (s *AccountInfo) SetName(val OptString) {
	s.Name = val
}

// SetProfile sets the value of Profile.
func (s *AccountInfo) SetProfile(val OptString) {
	s.Profile = val
}

func (*AccountInfo) getAccountInfoRes() {}
func (*AccountInfo) getOwnInfoRes()     {}

type CreateAccountBadRequest Error

func (*CreateAccountBadRequest) createAccountRes() {}

type CreateAccountInternalServerError Error

func (*CreateAccountInternalServerError) createAccountRes() {}

// DeleteAccountAccepted is response for DeleteAccount operation.
type DeleteAccountAccepted struct{}

func (*DeleteAccountAccepted) deleteAccountRes() {}

type DeleteAccountBadRequest Error

func (*DeleteAccountBadRequest) deleteAccountRes() {}

type DeleteAccountInternalServerError Error

func (*DeleteAccountInternalServerError) deleteAccountRes() {}

type DeleteAccountNotFound Error

func (*DeleteAccountNotFound) deleteAccountRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Code    OptInt    `json:"code"`
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptInt {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptInt) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val OptString) {
	s.Message = val
}

type GetAccountInfoInternalServerError Error

func (*GetAccountInfoInternalServerError) getAccountInfoRes() {}

type GetAccountInfoNotFound Error

func (*GetAccountInfoNotFound) getAccountInfoRes() {}

type GetOwnInfoForbidden Error

func (*GetOwnInfoForbidden) getOwnInfoRes() {}

type GetOwnInfoInternalServerError Error

func (*GetOwnInfoInternalServerError) getOwnInfoRes() {}

type GetOwnInfoNotFound Error

func (*GetOwnInfoNotFound) getOwnInfoRes() {}

type JWTAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *JWTAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *JWTAuth) SetToken(val string) {
	s.Token = val
}

// NewOptAccountCredentials returns new OptAccountCredentials with value set to v.
func NewOptAccountCredentials(v AccountCredentials) OptAccountCredentials {
	return OptAccountCredentials{
		Value: v,
		Set:   true,
	}
}

// OptAccountCredentials is optional AccountCredentials.
type OptAccountCredentials struct {
	Value AccountCredentials
	Set   bool
}

// IsSet returns true if OptAccountCredentials was set.
func (o OptAccountCredentials) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountCredentials) Reset() {
	var v AccountCredentials
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountCredentials) SetTo(v AccountCredentials) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountCredentials) Get() (v AccountCredentials, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountCredentials) Or(d AccountCredentials) AccountCredentials {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PasswordUpdateInfo
type PasswordUpdateInfo struct {
	ID          string `json:"id"`
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

// GetID returns the value of ID.
func (s *PasswordUpdateInfo) GetID() string {
	return s.ID
}

// GetOldPassword returns the value of OldPassword.
func (s *PasswordUpdateInfo) GetOldPassword() string {
	return s.OldPassword
}

// GetNewPassword returns the value of NewPassword.
func (s *PasswordUpdateInfo) GetNewPassword() string {
	return s.NewPassword
}

// SetID sets the value of ID.
func (s *PasswordUpdateInfo) SetID(val string) {
	s.ID = val
}

// SetOldPassword sets the value of OldPassword.
func (s *PasswordUpdateInfo) SetOldPassword(val string) {
	s.OldPassword = val
}

// SetNewPassword sets the value of NewPassword.
func (s *PasswordUpdateInfo) SetNewPassword(val string) {
	s.NewPassword = val
}

type UpdatePasswordBadRequest Error

func (*UpdatePasswordBadRequest) updatePasswordRes() {}

type UpdatePasswordForbidden Error

func (*UpdatePasswordForbidden) updatePasswordRes() {}

type UpdatePasswordInternalServerError Error

func (*UpdatePasswordInternalServerError) updatePasswordRes() {}

type UpdatePasswordNotFound Error

func (*UpdatePasswordNotFound) updatePasswordRes() {}

// UpdatePasswordOK is response for UpdatePassword operation.
type UpdatePasswordOK struct{}

func (*UpdatePasswordOK) updatePasswordRes() {}

type ValidateCredentialsBadRequest Error

func (*ValidateCredentialsBadRequest) validateCredentialsRes() {}

type ValidateCredentialsInternalServerError Error

func (*ValidateCredentialsInternalServerError) validateCredentialsRes() {}
