// Code generated by ogen, DO NOT EDIT.

package api

// Ref: #/components/schemas/AccountCredentials
type AccountCredentials struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

// GetPhone returns the value of Phone.
func (s *AccountCredentials) GetPhone() string {
	return s.Phone
}

// GetPassword returns the value of Password.
func (s *AccountCredentials) GetPassword() string {
	return s.Password
}

// SetPhone sets the value of Phone.
func (s *AccountCredentials) SetPhone(val string) {
	s.Phone = val
}

// SetPassword sets the value of Password.
func (s *AccountCredentials) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/AccountId
type AccountId struct {
	ID string `json:"id"`
}

// GetID returns the value of ID.
func (s *AccountId) GetID() string {
	return s.ID
}

// SetID sets the value of ID.
func (s *AccountId) SetID(val string) {
	s.ID = val
}

func (*AccountId) validateCredentialsRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Code    OptInt    `json:"code"`
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptInt {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptInt) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val OptString) {
	s.Message = val
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type ValidateCredentialsBadRequest Error

func (*ValidateCredentialsBadRequest) validateCredentialsRes() {}

type ValidateCredentialsInternalServerError Error

func (*ValidateCredentialsInternalServerError) validateCredentialsRes() {}
